@groovy.transform.BaseScript(parser = groovy.lang.GroovyClassLoader.DEFAULT_PARSER_CLASSES)
import my.custom.groovy.script.MyCustomGroovyScript
pipeline {
  agent any

  environment {
    BROWSER = "${params.BROWSER}"
    PLATFORM = "${params.PLATFORM}"
    Adminurl = "${params.Adminurl}"
    apiBaseURL = "${params.apiBaseURL}"
  }

  parameters {
    choice(name: 'BROWSER', choices: ['Select','chrome', 'edge', 'firefox','electron'], description: 'Pick the web browser you want to use to run your scripts')
    string(name: 'PLATFORM', defaultValue: 'x.09', trim: false, description: 'Mention the Platform where you have to run, for example: x.04,x.06,x.07,x.09')
    string(name: 'Adminurl', defaultValue: 'http://dfs-bd-demo-alb-2060992426.us-west-2.elb.amazonaws.com', trim: false, description: 'Mention the Web UI url before dfscontainer where you have to run, for example: http://dfs-bd-demo-alb-2060992426.us-west-2.elb.amazonaws.com')
    string(name: 'apiBaseURL', defaultValue: 'http://dfs-bd-demo-alb-2060992426.us-west-2.elb.amazonaws.com', trim: false, description: 'Mention the API url where you hit api for test, for example: http://dfs-bd-demo-alb-2060992426.us-west-2.elb.amazonaws.com')
  }

  stages {
    stage('Build') {
      steps {
        echo "Building the application"
      }
    }

    stage('Install Dependencies') {
      steps {
        bat "npm i --save-dev"

        // Install the Cypress parallel and serial execution plugins.
        bat "npm install cypress-parallel-execution cypress-serial-execution"
      }
    }

    stage('Parallel In Sequential') {
      steps {
        // Run the Cypress tests in parallel, but the individual tests within each test spec are executed sequentially.
        bat "./node_modules/.bin/cypress run -e TAGS='${PLATFORM}' --env Adminurl=${Adminurl},apiBaseURL=${apiBaseURL} Â --browser ${BROWSER}"
      }
    }
  }

  post {
    always {
      // Publish the HTML report to Jenkins.
      publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: true, reportDir: 'reports', reportFiles: 'index.html', reportName: 'HTML Report', reportTitles: ''])

      // Generate the Allure report.
      bat "allure generate allure-results"
    }
  }
}
